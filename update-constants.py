import sys

assert sys.version_info >= (3, 10)

pyi_header = """from typing import Final
from uuid import UUID

"""

rst_header = """`systemd.id128` module
======================

.. automodule:: systemd.id128
   :members:
   :undoc-members:
   :inherited-members:

   .. autogenerated, do not edit!
"""


msgs = {}

for file in sys.argv[1:]:
    with open(file) as f:
        lines = iter(f.read().splitlines())

    for line in lines:
        if line.startswith("#define SD_MESSAGE") and "_STR " not in line:
            if line.endswith("\\"):
                line = line[:-1] + next(lines)

            _, name, id128 = line.split(maxsplit=3)
            msgs[name] = id128


with (
    open("systemd/id128-defines.h", "wt") as defs,
    open("systemd/id128-constants.h", "wt") as consts,
    open("systemd/_id128.pyi", "wt") as pyi,
    open("docs/id128.rst", "wt") as rst,
):
    pyi.write(pyi_header)
    rst.write(rst_header)

    for name, id128 in sorted(msgs.items()):
        defs.write(f"#define {name} {id128}\n")
        consts.write(f'add_id(m, "{name}", {name}) JOINER\n')
        pyi.write(f"{name}: Final[UUID]\n")
        rst.write(f"   .. autoattribute:: systemd.id128.{name}\n")
